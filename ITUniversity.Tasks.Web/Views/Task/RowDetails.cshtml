@using ITUniversity.Tasks.Entities

@model TaskBase

@{
    ViewData["title"] = "Список задач";

    Func<TaskBase, string> calculateCardTitleStyle = task =>
    {
        return $"display: flex;{(string.IsNullOrWhiteSpace(task.Descr) ? " margin-bottom:0px;" : "")}";
    };

    Func<TaskBase, string> calculateBadgeClass = task =>
    {
        return $"badge badge-{(task.Status == ITUniversity.Tasks.Enums.TaskStatus.ToDo ? "primary" : "success")}";
    };
}

<div class="card">
    <div class="card-body">
        <div style="display: flex">
            <h5 class="card-title" sty;e="@calculateCardTitleStyle(Model)">
                <a href="@Url.Action("Details", "Task", new { id = Model.Id })">
                    @Model.Subject
                </a>
                @Model.Subject
                <span class="@calculateBadgeClass(Model)" style="margin-left: 5px;">
                    @Model.Status
                </span>
            </h5>
            <div style="width:100%">
                <span class="material-icons" style="float: right; cursor: pointer; color: red;" onclick="task.delete('@Model.Id', this)">
                    delete
                </span>
            </div>
        </div>
        @Model.Descr
    </div>
</div>